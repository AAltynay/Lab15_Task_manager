{"ast":null,"code":"import { ref, computed } from 'vue';\nimport Task from './TaskT01.vue';\nimport TaskForm from './TaskForm.vue';\nexport default {\n  components: {\n    Task,\n    TaskForm\n  },\n  setup() {\n    const tasks = ref([]);\n    const totalTasks = computed(() => tasks.value.length);\n    const completedTasks = computed(() => tasks.value.filter(task => task.completed).length);\n    const addTask = newTask => {\n      tasks.value.push({\n        ...newTask,\n        id: Date.now(),\n        completed: false\n      });\n    };\n    const removeTask = id => {\n      tasks.value = tasks.value.filter(task => task.id !== id);\n    };\n    const toggleCompleted = id => {\n      const task = tasks.value.find(task => task.id === id);\n      if (task) task.completed = !task.completed;\n    };\n    return {\n      tasks,\n      totalTasks,\n      completedTasks,\n      addTask,\n      removeTask,\n      toggleCompleted\n    };\n  }\n};","map":{"version":3,"names":["ref","computed","Task","TaskForm","components","setup","tasks","totalTasks","value","length","completedTasks","filter","task","completed","addTask","newTask","push","id","Date","now","removeTask","toggleCompleted","find"],"sources":["C:\\Users\\Acer\\task-manager\\src\\components\\TaskList.vue"],"sourcesContent":["<template> \r\n  <div> \r\n    <h1>Список задач ({{ totalTasks }})</h1> \r\n    <TaskForm @addTask=\"addTask\" /> \r\n    <div v-for=\"task in tasks\" :key=\"task.id\"> \r\n      <Task  \r\n        :task=\"task\"  \r\n        @removeTask=\"removeTask\"  \r\n        @toggleCompleted=\"toggleCompleted\"  \r\n      /> \r\n    </div> \r\n    <p>Выполненные задачи: {{ completedTasks }}</p> \r\n  </div> \r\n</template> \r\n \r\n<script> \r\nimport { ref, computed } from 'vue'; \r\nimport Task from './TaskT01.vue'; \r\nimport TaskForm from './TaskForm.vue'; \r\n \r\nexport default { \r\n  components: { Task, TaskForm }, \r\n  setup() { \r\n    const tasks = ref([]); \r\n     \r\n    const totalTasks = computed(() => tasks.value.length); \r\n    const completedTasks = computed(() => tasks.value.filter(task => task.completed).length); \r\n \r\n    const addTask = (newTask) => { \r\n      tasks.value.push({ ...newTask, id: Date.now(), completed: false }); \r\n    }; \r\n \r\n    const removeTask = (id) => { \r\n      tasks.value = tasks.value.filter(task => task.id !== id); \r\n    }; \r\n \r\n    const toggleCompleted = (id) => { \r\n      const task = tasks.value.find(task => task.id === id); \r\n      if (task) task.completed = !task.completed; \r\n    }; \r\n \r\n    return { tasks, totalTasks, completedTasks, addTask, removeTask, toggleCompleted }; \r\n  } \r\n}; \r\n</script>"],"mappings":"AAgBA,SAASA,GAAG,EAAEC,QAAO,QAAS,KAAK;AACnC,OAAOC,IAAG,MAAO,eAAe;AAChC,OAAOC,QAAO,MAAO,gBAAgB;AAErC,eAAe;EACbC,UAAU,EAAE;IAAEF,IAAI;IAAEC;EAAS,CAAC;EAC9BE,KAAKA,CAAA,EAAG;IACN,MAAMC,KAAI,GAAIN,GAAG,CAAC,EAAE,CAAC;IAErB,MAAMO,UAAS,GAAIN,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACC,MAAM,CAAC;IACrD,MAAMC,cAAa,GAAIT,QAAQ,CAAC,MAAMK,KAAK,CAACE,KAAK,CAACG,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACC,SAAS,CAAC,CAACJ,MAAM,CAAC;IAExF,MAAMK,OAAM,GAAKC,OAAO,IAAK;MAC3BT,KAAK,CAACE,KAAK,CAACQ,IAAI,CAAC;QAAE,GAAGD,OAAO;QAAEE,EAAE,EAAEC,IAAI,CAACC,GAAG,CAAC,CAAC;QAAEN,SAAS,EAAE;MAAM,CAAC,CAAC;IACpE,CAAC;IAED,MAAMO,UAAS,GAAKH,EAAE,IAAK;MACzBX,KAAK,CAACE,KAAI,GAAIF,KAAK,CAACE,KAAK,CAACG,MAAM,CAACC,IAAG,IAAKA,IAAI,CAACK,EAAC,KAAMA,EAAE,CAAC;IAC1D,CAAC;IAED,MAAMI,eAAc,GAAKJ,EAAE,IAAK;MAC9B,MAAML,IAAG,GAAIN,KAAK,CAACE,KAAK,CAACc,IAAI,CAACV,IAAG,IAAKA,IAAI,CAACK,EAAC,KAAMA,EAAE,CAAC;MACrD,IAAIL,IAAI,EAAEA,IAAI,CAACC,SAAQ,GAAI,CAACD,IAAI,CAACC,SAAS;IAC5C,CAAC;IAED,OAAO;MAAEP,KAAK;MAAEC,UAAU;MAAEG,cAAc;MAAEI,OAAO;MAAEM,UAAU;MAAEC;IAAgB,CAAC;EACpF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}