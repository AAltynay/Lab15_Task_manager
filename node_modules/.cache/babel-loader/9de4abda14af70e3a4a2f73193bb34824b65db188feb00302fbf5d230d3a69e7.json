{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelCheckbox as _vModelCheckbox, withDirectives as _withDirectives, renderSlot as _renderSlot, createTextVNode as _createTextVNode, createCommentVNode as _createCommentVNode, normalizeStyle as _normalizeStyle, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", {\n    style: _normalizeStyle({\n      backgroundColor: $data.isCompleted ? '#d4edda' : '#f8d7da'\n    }),\n    class: \"task\"\n  }, [_createElementVNode(\"h2\", null, _toDisplayString($props.task.title), 1 /* TEXT */), _createElementVNode(\"p\", null, _toDisplayString($props.task.description), 1 /* TEXT */), _withDirectives(_createElementVNode(\"input\", {\n    type: \"checkbox\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.isCompleted = $event),\n    onChange: _cache[1] || (_cache[1] = (...args) => $options.toggleCompleted && $options.toggleCompleted(...args))\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), [[_vModelCheckbox, $data.isCompleted]]), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.removeTask && $options.removeTask(...args))\n  }, \"Удалить\"), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.showDetails && $options.showDetails(...args))\n  }, \"Подробнее\"), $data.showDetail ? _renderSlot(_ctx.$slots, \"default\", {\n    key: 0\n  }, () => [_createTextVNode(_toDisplayString($props.task.description), 1 /* TEXT */)]) : _createCommentVNode(\"v-if\", true)], 4 /* STYLE */);\n}","map":{"version":3,"names":["_createElementBlock","style","_normalizeStyle","backgroundColor","$data","isCompleted","class","_createElementVNode","_toDisplayString","$props","task","title","description","type","_cache","$event","onChange","args","$options","toggleCompleted","onClick","removeTask","showDetails","showDetail","_renderSlot","_ctx","$slots","key","_createTextVNode","_createCommentVNode"],"sources":["C:\\Users\\Acer\\task-manager\\src\\components\\TaskT01.vue"],"sourcesContent":["<template> \r\n  <div :style=\"{ backgroundColor: isCompleted ? '#d4edda' : '#f8d7da' }\" class=\"task\"> \r\n    <h2>{{ task.title }}</h2> \r\n    <p>{{ task.description }}</p> \r\n    <input type=\"checkbox\" v-model=\"isCompleted\" @change=\"toggleCompleted\" /> \r\n    <button @click=\"removeTask\">Удалить</button> \r\n    <button @click=\"showDetails\">Подробнее</button> \r\n    <slot v-if=\"showDetail\">{{ task.description }}</slot> \r\n  </div> \r\n</template> \r\n \r\n<script> \r\nexport default { \r\n  props: ['task'], \r\n  data() { \r\n    return { \r\n      showDetail: false, \r\n      isCompleted: this.task.completed, // Локальная копия состояния completed \r\n    }; \r\n  }, \r\n  watch: { \r\n    // Следите за изменениями в пропсе и обновляйте локальное состояние \r\n    task: { \r\n      handler(newTask) { \r\n        this.isCompleted = newTask.completed; \r\n      }, \r\n      deep: true, \r\n      immediate: true, \r\n    }, \r\n  }, \r\n  methods: { \r\n    removeTask() { \r\n      this.$emit('removeTask', this.task.id); \r\n    }, \r\n    toggleCompleted() { \r\n      this.isCompleted = !this.isCompleted; // Меняем локальную копию \r\n      this.$emit('toggleCompleted', this.task.id, this.isCompleted); // Отправляем обновленное состояние \r\n    }, \r\n    showDetails() { \r\n      this.showDetail = !this.showDetail; \r\n    }, \r\n  }, \r\n}; \r\n</script> \r\n \r\n<style> \r\n.task { \r\n  padding: 10px; \r\n  margin: 10px 0; \r\n  border: 1px solid #ccc; \r\n} \r\n</style>"],"mappings":";;uBACEA,mBAAA,CAOM;IAPAC,KAAK,EADbC,eAAA;MAAAC,eAAA,EACkCC,KAAA,CAAAC,WAAW;IAAA;IAA4BC,KAAK,EAAC;MAC3EC,mBAAA,CAAyB,YAAAC,gBAAA,CAAlBC,MAAA,CAAAC,IAAI,CAACC,KAAK,kBACjBJ,mBAAA,CAA6B,WAAAC,gBAAA,CAAvBC,MAAA,CAAAC,IAAI,CAACE,WAAW,kB,gBACtBL,mBAAA,CAAyE;IAAlEM,IAAI,EAAC,UAAU;IAJ1B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAIoCX,KAAA,CAAAC,WAAW,GAAAU,MAAA;IAAGC,QAAM,EAAAF,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEC,QAAA,CAAAC,eAAA,IAAAD,QAAA,CAAAC,eAAA,IAAAF,IAAA,CAAe;qEAArCb,KAAA,CAAAC,WAAW,E,GAC3CE,mBAAA,CAA4C;IAAnCa,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEC,QAAA,CAAAG,UAAA,IAAAH,QAAA,CAAAG,UAAA,IAAAJ,IAAA,CAAU;KAAE,SAAO,GACnCV,mBAAA,CAA+C;IAAtCa,OAAK,EAAAN,MAAA,QAAAA,MAAA,UAAAG,IAAA,KAAEC,QAAA,CAAAI,WAAA,IAAAJ,QAAA,CAAAI,WAAA,IAAAL,IAAA,CAAW;KAAE,WAAS,GAC1Bb,KAAA,CAAAmB,UAAU,GAAtBC,WAAA,CAAqDC,IAAA,CAAAC,MAAA;IAPzDC,GAAA;EAAA,GAOI,MAAqD,CAPzDC,gBAAA,CAAApB,gBAAA,CAO+BC,MAAA,CAAAC,IAAI,CAACE,WAAW,iB,IAP/CiB,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}