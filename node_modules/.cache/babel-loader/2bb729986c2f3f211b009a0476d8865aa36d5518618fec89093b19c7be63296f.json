{"ast":null,"code":"export default {\n  props: ['task'],\n  data() {\n    return {\n      showDetail: false,\n      isCompleted: this.task.completed // Локальная копия состояния completed \n    };\n  },\n  watch: {\n    // Следите за изменениями в пропсе и обновляйте локальное состояние \n    task: {\n      handler(newTask) {\n        this.isCompleted = newTask.completed;\n      },\n      deep: true,\n      immediate: true\n    }\n  },\n  methods: {\n    removeTask() {\n      this.$emit('removeTask', this.task.id);\n    },\n    toggleCompleted() {\n      this.isCompleted = !this.isCompleted; // Меняем локальную копию \n      this.$emit('toggleCompleted', this.task.id, this.isCompleted); // Отправляем обновленное состояние \n    },\n    showDetails() {\n      this.showDetail = !this.showDetail;\n    }\n  }\n};","map":{"version":3,"names":["props","data","showDetail","isCompleted","task","completed","watch","handler","newTask","deep","immediate","methods","removeTask","$emit","id","toggleCompleted","showDetails"],"sources":["C:\\Users\\Acer\\task-manager\\src\\components\\TaskT01.vue"],"sourcesContent":["<template> \r\n  <div :style=\"{ backgroundColor: isCompleted ? '#d4edda' : '#f8d7da' }\" class=\"task\"> \r\n    <h2>{{ task.title }}</h2> \r\n    <p>{{ task.description }}</p> \r\n    <input type=\"checkbox\" v-model=\"isCompleted\" @change=\"toggleCompleted\" /> \r\n    <button @click=\"removeTask\">Удалить</button> \r\n    <button @click=\"showDetails\">Подробнее</button> \r\n    <slot v-if=\"showDetail\">{{ task.description }}</slot> \r\n  </div> \r\n</template> \r\n \r\n<script> \r\nexport default { \r\n  props: ['task'], \r\n  data() { \r\n    return { \r\n      showDetail: false, \r\n      isCompleted: this.task.completed, // Локальная копия состояния completed \r\n    }; \r\n  }, \r\n  watch: { \r\n    // Следите за изменениями в пропсе и обновляйте локальное состояние \r\n    task: { \r\n      handler(newTask) { \r\n        this.isCompleted = newTask.completed; \r\n      }, \r\n      deep: true, \r\n      immediate: true, \r\n    }, \r\n  }, \r\n  methods: { \r\n    removeTask() { \r\n      this.$emit('removeTask', this.task.id); \r\n    }, \r\n    toggleCompleted() { \r\n      this.isCompleted = !this.isCompleted; // Меняем локальную копию \r\n      this.$emit('toggleCompleted', this.task.id, this.isCompleted); // Отправляем обновленное состояние \r\n    }, \r\n    showDetails() { \r\n      this.showDetail = !this.showDetail; \r\n    }, \r\n  }, \r\n}; \r\n</script> \r\n \r\n<style> \r\n.task { \r\n  padding: 10px; \r\n  margin: 10px 0; \r\n  border: 1px solid #ccc; \r\n} \r\n</style>"],"mappings":"AAYA,eAAe;EACbA,KAAK,EAAE,CAAC,MAAM,CAAC;EACfC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,UAAU,EAAE,KAAK;MACjBC,WAAW,EAAE,IAAI,CAACC,IAAI,CAACC,SAAS,CAAE;IACpC,CAAC;EACH,CAAC;EACDC,KAAK,EAAE;IACL;IACAF,IAAI,EAAE;MACJG,OAAOA,CAACC,OAAO,EAAE;QACf,IAAI,CAACL,WAAU,GAAIK,OAAO,CAACH,SAAS;MACtC,CAAC;MACDI,IAAI,EAAE,IAAI;MACVC,SAAS,EAAE;IACb;EACF,CAAC;EACDC,OAAO,EAAE;IACPC,UAAUA,CAAA,EAAG;MACX,IAAI,CAACC,KAAK,CAAC,YAAY,EAAE,IAAI,CAACT,IAAI,CAACU,EAAE,CAAC;IACxC,CAAC;IACDC,eAAeA,CAAA,EAAG;MAChB,IAAI,CAACZ,WAAU,GAAI,CAAC,IAAI,CAACA,WAAW,EAAE;MACtC,IAAI,CAACU,KAAK,CAAC,iBAAiB,EAAE,IAAI,CAACT,IAAI,CAACU,EAAE,EAAE,IAAI,CAACX,WAAW,CAAC,EAAE;IACjE,CAAC;IACDa,WAAWA,CAAA,EAAG;MACZ,IAAI,CAACd,UAAS,GAAI,CAAC,IAAI,CAACA,UAAU;IACpC;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}